{"entries":[{"timestamp":1754863572278,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":46,"diffs":[[1,"\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":202,"length1":39,"diffs":[[1,"        \"README.md\"\n"]]},{"start1":229,"length1":75,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"test.ts","value":"// aquí va el archivo \"tests\"; esto no se compilará cuando este paquete se utilice como una extensión.\n"},{"type":"added","filename":"main.py","value":"from microbit import *\nimport machine\nimport utime\n\n# Configuración del servo\nservo_pin = machine.Pin(0, machine.Pin.OUT)\nservo = machine.PWM(servo_pin)\nservo.freq(50)\n\ndef mover_servo(angulo):\n    duty = int((angulo/180)*102 + 26)  # Conversión para SG90\n    servo.duty(duty)\n\n# Ejemplo básico: dispensar cada 10 segundos\nwhile True:\n    mover_servo(90)  # Abre compuerta\n    sleep(2000)\n    mover_servo(0)   # Cierra compuerta\n    sleep(10000)\n\n"}]}],"snapshots":[{"timestamp":1754863572277,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"comida\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1754863668357}